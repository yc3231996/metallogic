# 优化的LLM分析工作流程

## 总体架构

采用一个三阶段的混合方法：

1. 初始大型COT提示词
2. 交互式中间节点
3. 最终综合分析

### 阶段1：初始大型COT提示词

使用一个综合性的COT提示词，涵盖前三个节点（数据库结构理解、业务领域分析、生成SQL可回答的分析问题）。

理由：
- 这些步骤高度相关，often需要同时考虑多个方面。
- LLM可以在单一上下文中保持连贯性，减少信息丢失。
- 减少中间步骤，提高效率。

示例提示词结构：
```
作为一位资深的数据分析专家，你的任务是分析以下数据库结构，并提供深入的业务洞察。请按以下步骤进行：

1. 全面理解数据库结构：
   - 分析表之间的关系
   - 识别关键字段和它们的业务含义
   - 注意任何数据类型限制或特殊设计

2. 推断业务领域和关键流程：
   - 基于数据结构，推断这个数据库服务于哪个业务领域
   - 识别可能的核心业务流程
   - 列出3-5个你认为最重要的关键绩效指标(KPIs)

3. 生成10个高价值的业务分析问题：
   - 这些问题应该可以通过SQL查询来回答
   - 每个问题应该包括其业务重要性和基本的SQL查询思路

数据库结构如下：
[插入数据库结构描述]

请提供你的详细分析和洞察。
```

### 阶段2：交互式中间节点

将第4个节点（生成需要额外数据的分析问题）作为一个独立的交互式步骤。

理由：
- 这一步骤需要"跳出"现有数据的限制，可能受益于人类的中间输入。
- 允许根据初始分析结果调整方向。

示例提示词：
```
基于之前的分析，我们现在要考虑一些更广泛的业务问题，这些问题可能需要额外的数据来回答。请生成5个这样的问题，每个问题应包括：

1. 问题描述
2. 为什么这个问题对业务很重要
3. 回答这个问题可能需要的额外数据
4. 获取这些额外数据的可能方法

请确保这些问题能提供重要的业务洞察，并考虑长期战略价值。
```

### 阶段3：最终综合分析

使用最后一个节点作为综合分析和优化阶段。

理由：
- 允许整合前面所有步骤的结果。
- 提供一个机会来优先排序和精炼分析问题。
- 产生一个连贯的、可操作的最终报告。

示例提示词：
```
请回顾之前所有的分析结果，包括数据库结构理解、业务领域分析、SQL可回答的问题和需要额外数据的问题。你的任务是：

1. 整合并优化这些问题，确保它们:
   - 相互补充而不重复
   - 覆盖了关键的业务领域
   - 具有高度的业务价值和可行性

2. 将最终的问题列表分为两类：
   A. 可以通过现有数据库结构回答的问题
   B. 需要额外数据支持的问题

3. 对每类问题按照重要性和紧迫性进行排序。

4. 为每个问题添加简短说明，解释其业务价值和潜在影响。

5. 对于A类问题，提供简要的分析思路。
   对于B类问题，简述获取所需额外数据的建议。

请提供一个结构化的最终报告，包括您对整个分析过程的总结和建议。
```

## 优势

1. 效率：通过合并前三个步骤，减少了中间交互，加快了整体过程。
2. 连贯性：初始大型COT允许LLM在一个连贯的上下文中进行推理。
3. 灵活性：中间交互步骤允许人类输入和调整。
4. 全面性：最终综合分析确保了结果的全面性和实用性。
5. 质量控制：分阶段方法允许在过程中进行质量检查和调整。

## 注意事项

1. 初始COT提示词可能需要根据具体的数据库复杂性进行调整。
2. 人类参与仍然重要，特别是在评估中间结果和指导额外数据需求方面。
3. 根据实际使用情况和结果质量，可能需要对工作流程进行微调。